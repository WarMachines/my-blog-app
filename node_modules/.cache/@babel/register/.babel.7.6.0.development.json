{
  "{\"sourceRoot\":\"C:\\\\Users\\\\saura\\\\Desktop\\\\preparation\\\\LinkedIn Learning\\\\React Creating and Hosting a Full-Stack Site\\\\my-blog-backend\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\saura\\\\Desktop\\\\preparation\\\\LinkedIn Learning\\\\React Creating and Hosting a Full-Stack Site\\\\my-blog-backend\",\"filename\":\"C:\\\\Users\\\\saura\\\\Desktop\\\\preparation\\\\LinkedIn Learning\\\\React Creating and Hosting a Full-Stack Site\\\\my-blog-backend\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\saura\\\\Desktop\\\\preparation\\\\LinkedIn Learning\\\\React Creating and Hosting a Full-Stack Site\\\\my-blog-backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend",
      "filename": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\nvar uri = 'mongodb+srv://saurabhchauhan9194:abcd@cluster0-vgdc3.mongodb.net/test?retryWrites=true&w=majority';\napp.use(_bodyParser[\"default\"].json());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, '/build')));\n\nvar withDB =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect(uri, {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db('my-blog');\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.post('/api/articles/:name/upvote',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB(\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(db) {\n                var articleName, articleInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context2.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context2.sent;\n                        _context2.next = 6;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            upvotes: articleInfo.upvotes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context2.next = 8;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        updatedArticleInfo = _context2.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/add-comment', function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  console.log(req);\n  withDB(\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(db) {\n      var articlesInfo, updatedArticleInfo;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 2:\n              articlesInfo = _context4.sent;\n              _context4.next = 5;\n              return db.collection('articles').updateOne({\n                name: articleName\n              }, {\n                '$set': {\n                  comments: articlesInfo.comments.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 5:\n              _context4.next = 7;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 7:\n              updatedArticleInfo = _context4.sent;\n              res.status(200).json(updatedArticleInfo);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), res);\n});\napp.get('/api/articles/:name',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            withDB(\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(db) {\n                var articleName, articlesInfo;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context5.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articlesInfo = _context5.sent;\n                        res.status(200).json(articlesInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x9) {\n                return _ref6.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.get('/api/articles/',\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(req, res) {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            withDB(\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(db) {\n                var allArticles;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        _context7.next = 3;\n                        return db.collection('articles').find({}).toArray();\n\n                      case 3:\n                        allArticles = _context7.sent;\n                        res.status(200).json(allArticles);\n                        _context7.next = 11;\n                        break;\n\n                      case 7:\n                        _context7.prev = 7;\n                        _context7.t0 = _context7[\"catch\"](0);\n                        console.log(_context7.t0);\n                        throw _context7.t0;\n\n                      case 11:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 7]]);\n              }));\n\n              return function (_x12) {\n                return _ref8.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/add-article', function (req, res) {\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      content = _req$body2.content;\n  withDB(\n  /*#__PURE__*/\n  function () {\n    var _ref9 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(db) {\n      var allArticles;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return db.collection('articles').insertOne({\n                name: name,\n                content: content,\n                upvotes: 0,\n                comments: []\n              }, function (err, res) {\n                if (err) {\n                  console.log(err);\n                  throw err;\n                }\n              });\n\n            case 2:\n              _context9.next = 4;\n              return db.collection('articles').find({}).toArray();\n\n            case 4:\n              allArticles = _context9.sent;\n              res.status(200).json(allArticles);\n\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function (_x13) {\n      return _ref9.apply(this, arguments);\n    };\n  }(), res);\n});\napp.get('*', function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname + '/build/index.html'));\n});\napp.listen(8000, function () {\n  return console.log('Server is listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "uri",
        "use",
        "bodyParser",
        "json",
        "express",
        "path",
        "join",
        "__dirname",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "post",
        "req",
        "articleName",
        "params",
        "name",
        "collection",
        "findOne",
        "articleInfo",
        "updateOne",
        "upvotes",
        "updatedArticleInfo",
        "body",
        "username",
        "text",
        "console",
        "log",
        "articlesInfo",
        "comments",
        "concat",
        "get",
        "find",
        "toArray",
        "allArticles",
        "content",
        "insertOne",
        "err",
        "sendFile",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\saura\\Desktop\\preparation\\LinkedIn Learning\\React Creating and Hosting a Full-Stack Site\\my-blog-backend\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\nimport path from 'path';\r\n\r\nconst app = express();\r\nconst uri = 'mongodb+srv://saurabhchauhan9194:abcd@cluster0-vgdc3.mongodb.net/test?retryWrites=true&w=majority';\r\n\r\napp.use(bodyParser.json());\r\napp.use(express.static(path.join(__dirname, '/build')));\r\n\r\nconst withDB = async (operations, res) => {\r\n    try {\r\n        const client = await MongoClient.connect(uri, { useNewUrlParser : true});\r\n        const db = client.db('my-blog');\r\n        await operations(db);\r\n        client.close();\r\n    }   catch ( error) {\r\n        res.status(500).json({message : 'Error connecting to db', error});\r\n    }\r\n}\r\n\r\napp.post('/api/articles/:name/upvote', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const articleName = req.params.name;\r\n        const articleInfo = await db.collection('articles').findOne({ name : articleName});\r\n        await db.collection('articles').updateOne({ name : articleName} , {\r\n            '$set' : {\r\n                upvotes : articleInfo.upvotes + 1\r\n            }\r\n        });\r\n        const updatedArticleInfo = await db.collection('articles').findOne({ name : articleName});\r\n        res.status(200).json(updatedArticleInfo);\r\n    }, res)\r\n});\r\n\r\napp.post('/api/articles/:name/add-comment', (req, res) => {\r\n    const { username, text} = req.body;\r\n    const articleName = req.params.name;\r\n    console.log(req)\r\n    withDB(async (db) => {\r\n        const articlesInfo = await db.collection('articles').findOne( { name : articleName});\r\n        await db.collection('articles').updateOne({name : articleName}, {\r\n            '$set' : {\r\n                comments : articlesInfo.comments.concat({ username, text})\r\n            }\r\n        });\r\n\r\n        const updatedArticleInfo = await db.collection('articles').findOne({name : articleName});\r\n        res.status(200).json(updatedArticleInfo);   \r\n    }, res);\r\n});\r\n\r\napp.get('/api/articles/:name', async (req, res) => {\r\n        withDB(async (db) => {\r\n            const articleName = req.params.name;\r\n            const articlesInfo = await db.collection('articles').findOne( { name : articleName});\r\n            res.status(200).json(articlesInfo);\r\n        }, res)\r\n});\r\n\r\napp.get('/api/articles/', async (req, res) => {\r\n    withDB(async (db) => {\r\n        try {\r\n        const allArticles = await db.collection('articles').find({}).toArray();\r\n        res.status(200).json(allArticles);\r\n        }\r\n        catch ( error ){\r\n            console.log(error)\r\n            throw error;\r\n        }\r\n    }, res)\r\n});\r\n\r\napp.post('/api/articles/add-article', (req, res) => {\r\n    const { name, content } = req.body\r\n    withDB(async (db)=> {\r\n        await db.collection('articles').insertOne( { name : name, content : content, upvotes : 0, comments : []}, (err, res) => {\r\n            if(err) {\r\n                console.log(err);\r\n                throw err;\r\n            }\r\n        })\r\n        const allArticles = await db.collection('articles').find({}).toArray();\r\n        res.status(200).json(allArticles);\r\n    }, res)\r\n})\r\n\r\napp.get('*', (req, res) => {\r\n    res.sendFile(path.join(__dirname + '/build/index.html'));\r\n})\r\n\r\napp.listen(8000, () => console.log('Server is listening on port 8000'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1568929054017
  }
}